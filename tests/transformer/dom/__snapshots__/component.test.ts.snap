// Vitest Snapshot v1

exports[`should compile child component 1`] = `
"import { $$_clone, $$_insert, $$_create_component, $$_create_template } from \\"maverick.js/dom\\";

const $$_templ = /* #__PURE__ */ $$_create_template(\`<div></div>\`);
(() => {
  const $$_root = $$_clone($$_templ),
    $$_el = $$_root.firstChild;

  $$_insert($$_el, $$_create_component(Component));

  return $$_el;
})()"
`;

exports[`should compile component child fragment 1`] = `
"import { $$_clone, $$_insert, $$_create_template, $$_create_component } from \\"maverick.js/dom\\";

const $$_templ = /* #__PURE__ */ $$_create_template(\`<div id=\\"foo\\"></div><div id=\\"bar\\"></div><div></div>\`);

$$_create_component(Component, {
  get children() {
    const $$_root = $$_clone($$_templ),
      $$_el = $$_root.firstChild,
      $$_el_2 = $$_el.nextSibling,
      $$_el_3 = $$_el_2.nextSibling;

    $$_insert($$_el, id);
    $$_insert($$_el_2, id);
    $$_insert($$_root, id, $$_el_3);
    $$_insert($$_root, id, null);

    return $$_root;
  },
})
"
`;

exports[`should compile component with element children 1`] = `
"import { $$_clone, $$_insert, $$_create_template, $$_create_component } from \\"maverick.js/dom\\";

const $$_templ = /* #__PURE__ */ $$_create_template(\`<div>Foo</div>\`);
$$_create_component(Component, {
  get children() {
    const $$_root = $$_clone($$_templ),
      $$_el = $$_root.firstChild;

    $$_insert($$_el, id, null);

    return $$_el;
  },
})"
`;

exports[`should compile component with multiple spreads 1`] = `
"import { $$_create_component, $$_merge_props } from \\"maverick.js/dom\\";
$$_create_component(Component, $$_merge_props(props, propsTwo, propsThree))"
`;

exports[`should compile component with props 1`] = `
"import { $$_create_component } from \\"maverick.js/dom\\";
$$_create_component(Component, { foo: \\"a\\", bar: 10, boo: true, baz: id, qux: true })"
`;

exports[`should compile component with props and children 1`] = `
"import { $$_create_template, $$_clone, $$_create_component } from \\"maverick.js/dom\\";

const $$_templ = /* #__PURE__ */ $$_create_template(\`<div></div>\`);
$$_create_component(Component, {
  foo: id,
  get children() {
    return $$_clone($$_templ, 1 /* ELEMENT */);
  },
})"
`;

exports[`should compile component with props and spread 1`] = `
"import { $$_create_component, $$_merge_props } from \\"maverick.js/dom\\";
$$_create_component(
  Component,
  $$_merge_props(props, {
    foo: \\"...\\",
    get bar() {
      return id() + 10;
    },
  }),
)"
`;

exports[`should compile component with spread 1`] = `
"import { $$_create_component, $$_merge_props } from \\"maverick.js/dom\\";
$$_create_component(Component, props)"
`;

exports[`should compile component with text children 1`] = `
"import { $$_create_component } from \\"maverick.js/dom\\";
$$_create_component(Component, {
  get children() {
    return \\"foo 10 bar 20 baz\\";
  },
})"
`;

exports[`should compile nested components 1`] = `
"import { $$_create_template, $$_clone, $$_create_component } from \\"maverick.js/dom\\";

const $$_templ = /* #__PURE__ */ $$_create_template(\`<div><span>Text</span></div>\`),
  $$_templ_2 = /* #__PURE__ */ $$_create_template(\`<div></div>\`);

$$_create_component(Component, {
  get children() {
    return [
      \\"Text\\",
      $$_clone($$_templ, 1 /* ELEMENT */),
      $$_create_component(Foo),
      $$_create_component(Bar, {
        get children() {
          return [$$_clone($$_templ_2, 1 /* ELEMENT */), $$_create_component(Baz)];
        },
      }),
    ];
  },
})
"
`;

exports[`should compile root component 1`] = `
"import { $$_create_component } from \\"maverick.js/dom\\";
$$_create_component(Component)"
`;

exports[`should compile root expression  1`] = `
"import { $$_clone, $$_insert, $$_create_template } from \\"maverick.js/dom\\";

const $$_templ = /* #__PURE__ */ $$_create_template(\`<div></div>\`);

function Component() {
  return id > 10 ? (() => {
  const $$_root = $$_clone($$_templ),
    $$_el = $$_root.firstChild;

  $$_insert($$_el, id);

  return $$_el;
})() : 20;
}
  "
`;

exports[`should forward multiple call expressions 1`] = `
"import { $$_clone, $$_insert, $$_create_template, $$_create_component } from \\"maverick.js/dom\\";

const $$_templ = /* #__PURE__ */ $$_create_template(\`<div></div>\`),
  $$_templ_2 = /* #__PURE__ */ $$_templ;

$$_create_component(Component, {
  get children() {
    return [() =>
      (() => {
        const $$_root = $$_clone($$_templ),
          $$_el = $$_root.firstChild;

        $$_insert($$_el, id);

        return $$_el;
      })(), () =>
      (() => {
        const $$_root = $$_clone($$_templ_2),
          $$_el = $$_root.firstChild;

        $$_insert($$_el, id);

        return $$_el;
      })()];
  },
})
"
`;

exports[`should forward single call expression 1`] = `
"import { $$_clone, $$_insert, $$_create_template, $$_create_component } from \\"maverick.js/dom\\";

const $$_templ = /* #__PURE__ */ $$_create_template(\`<div></div>\`);
$$_create_component(Component, {
  get children() {
    return () =>
      (() => {
        const $$_root = $$_clone($$_templ),
          $$_el = $$_root.firstChild;

        $$_insert($$_el, id);

        return $$_el;
      })();
  },
})"
`;

exports[`should insert fragmented child components 1`] = `
"import { $$_clone, $$_insert, $$_create_component, $$_create_template } from \\"maverick.js/dom\\";

const $$_templ = /* #__PURE__ */ $$_create_template(\`<div><div>Foo</div></div>\`);

(() => {
  const $$_root = $$_clone($$_templ),
    $$_el = $$_root.firstChild,
    $$_el_2 = $$_el.firstChild;

  $$_insert($$_el, $$_create_component(Component), $$_el_2);
  $$_insert($$_el, $$_create_component(Component), $$_el_2);
  $$_insert($$_el, $$_create_component(Component), null);

  return $$_el;
})()"
`;

exports[`should insert multiple child components 1`] = `
"import { $$_clone, $$_insert, $$_create_component, $$_create_template } from \\"maverick.js/dom\\";

const $$_templ = /* #__PURE__ */ $$_create_template(\`<div><div>Foo</div></div>\`);

(() => {
  const $$_root = $$_clone($$_templ),
    $$_el = $$_root.firstChild,
    $$_el_2 = $$_el.firstChild;

  $$_insert($$_el, $$_create_component(Component), $$_el_2);
  $$_insert($$_el, $$_create_component(Component), $$_el_2);
  $$_insert($$_el, $$_create_component(Component), null);

  return $$_el;
})()"
`;
